<?php

namespace UserBundle\Repository;

use Doctrine\Common\Collections\Criteria;
use Doctrine\ORM\EntityRepository;
use UserBundle\Entity\User;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends EntityRepository
{

    // Find the youngsters connected coach
    public function findMyYoungsters(User $user)
    {
        $qb = $this->createQueryBuilder('user')
            ->where('user.role = :role')
            ->setParameter('role', 'ROLE_YOUNGSTER')
            ->leftJoin('user.coach', 'coach')
            ->andWhere('coach = :coach')
            ->setParameter('coach', $user)
        ;
        return $qb;
    }

    public function findAllYoungsters()
    {
        $qb = $this->createQueryBuilder('user')
            ->where('user.role = :role')
            ->setParameter('role', 'ROLE_YOUNGSTER')
        ;
        return $qb;
    }

    public function findNonYoungster()
    {
        $qb = $this->createQueryBuilder('user')
            ->where('user.role != :role')
            ->setParameter('role', 'ROLE_YOUNGSTER')
            ->getQuery()
            ->execute()
        ;
        return $qb;
    }

    // Fetch the coach of the young connected or link into an action
    public function findYoungStaffCoach($user)
    {
        $qb = $this->createQueryBuilder('user')
            ->where('user.role = :role')
            ->setParameter('role', 'ROLE_STAFF')
            ->leftJoin('user.youngsters', 'youngsters')
            ->andWhere('youngsters = :youngster')
            ->setParameter('youngster', $user)
            ->getQuery()
            ->execute()
        ;
        return $qb;
    }

    public function findYoungAllCoaches($user)
    {
        $qb = $this->createQueryBuilder('user')
            ->where('user.role != :role')
            ->setParameter('role', 'ROLE_YOUNGSTER')
            ->leftJoin('user.youngsters', 'youngsters')
            ->andWhere('youngsters = :youngster')
            ->setParameter('youngster', $user)
            ->getQuery()
            ->execute()
        ;
        return $qb;
    }

}
